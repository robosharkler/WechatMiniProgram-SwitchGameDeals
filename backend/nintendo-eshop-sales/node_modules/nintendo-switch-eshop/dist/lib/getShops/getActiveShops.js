"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getActiveShops = void 0;
const getShopsAmerica_1 = require("./getShopsAmerica");
const getShopsAsia_1 = require("./getShopsAsia");
const getShopsEurope_1 = require("./getShopsEurope");
/**
 * Gets all active eShops.
 *
 * @remarks
 * This method will launch several requests at nintendo web services, so don't abuse it.
 *
 * @returns A list of shop objects with country code, name and default currency.
 */
exports.getActiveShops = () => __awaiter(void 0, void 0, void 0, function* () {
    try {
        const shopsAmerica = yield getShopsAmerica_1.getShopsAmerica();
        const shopsAsia = yield getShopsAsia_1.getShopsAsia();
        const shopsEurope = yield getShopsEurope_1.getShopsEurope();
        return shopsAmerica.concat(shopsAsia, shopsEurope);
    }
    catch (err) {
        throw new Error(err);
    }
});
//# sourceMappingURL=getActiveShops.js.map